#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _DFL 0
#define _NUM 1
#define _ADJ 2
#define _OSL 3

#define TAPPING_TERM 150
#define QUICK_TAP 200


/*
 Key index
 0  1  2  3  4         5  6  7  8  9
10 11 12 13 14        15 16 17 18 19
20 21 22 23 24        25 26 27 28 29
        30 31 32    33 34 35
*/

/*
/ {
    combos {
        compatible = "zmk,combos";
        // Umlauts; requires EUR keymap
        combo_uauml {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp RA(LS(A))>;
        };
        combo_uouml {
            timeout-ms = <50>;
            key-positions = <0 2>;
            bindings = <&kp RA(LS(O))>;
        };
        combo_uuuml {
            timeout-ms = <50>;
            key-positions = <0 3>;
            bindings = <&kp RA(LS(U))>;
        };
        combo_lauml {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp RA(A)>;
        };
        combo_louml {
            timeout-ms = <50>;
            key-positions = <20 22>;
            bindings = <&kp RA(O)>;
        };
        combo_luuml {
            timeout-ms = <50>;
            key-positions = <20 23>;
            bindings = <&kp RA(U)>;
        };
        combo_lsuml {
            timeout-ms = <50>;
            key-positions = <20 24>;
            bindings = <&kp RA(S)>;
        };
    };
};

*/

/*
/ {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};

*/

/ {

  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    td0: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_0";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&hm RGUI SEMI>, <&kp SQT>;
    };
    td1: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_1";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mt LCTRL TAB>, <&kp ESC>;
    };
  };
};

/ {
  keymap {
            compatible = "zmk,keymap";
            default_layer {
                label = "Colmak";
// Homerow mod: shift, ctrl, alt, command
// ----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |	|  J   |  L   |  U   |  Y  |  ;  |
// |  A  |  R  |  S  |  T  |  G   |	|  M   |  N   |  E   |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |	|  K   |  H   |  ,   |  .  |  /  |
//             | TAB | SPC | _NUM |	| _OSL | RET  | BSPC |
                bindings = <
   &kp Q          &kp W          &kp F          &kp P          &kp B        /**/   &kp J          &kp L          &kp U          &kp Y          &kp SEMI
   &hm LSHFT  A   &hm LCTRL R    &hm LALT S     &hm LCMD T     &kp G        /**/   &kp M          &hm RCMD N     &hm RALT E     &hm RCTRL I    &hm RSHFT O
   &kp Z          &kp X          &kp C          &kp D          &kp V        /**/   &kp K          &kp H          &kp COMMA      &kp DOT        &kp FSLH
                                 &kp TAB        &kp SPACE      &to _NUM     /**/   &sl _OSL       &kp RET        &kp BSPC
                        >;
                };
		
            num_layer {
                label = "NUM";
// Homerow mod: shift, ctrl, alt, command
// -----------------------------------------------------------------------------------------
// |  F1  |  F2 |  F3   |  F4   |  F5   |     |  F6  |  F7  |  F8   | F9 | F10 |
// |  9   |  7  |  5    |  3    |  1    |     |  0   |  2   |  4    | 6  |  8  |
// |  +   | -   | LEFT  | RIGHT | EQUAL |     |  UP  | DOWN |  ,    | .  |  /  |
//              | TAB   | SPC   | _ADJ  |     | _DFL | RET  | BSPC |
                bindings = <
   &kp F1         &kp F2         &kp F3         &kp F4         &kp F5       /**/   &kp F6         &kp F7         &kp F8         &kp F9         &kp F10 
   &hm LSHFT N9   &hm LCTRL N7   &hm LALT N5    &hm LCMD N3    &kp N1       /**/   &kp N0         &hm RCMD N2    &hm RALT N4    &hm RCTRL N6   &hm RSHFT N8
   &kp PLUS       &kp MINUS      &kp LEFT       &kp RIGHT      &kp EQUAL    /**/   &kp UP         &kp DOWN       &kp COMMA      &kp DOT        &kp FSLH
               	                 &kp TAB        &kp SPACE      &to _ADJ     /**/   &to _DFL       &kp RET        &kp BSPC
                        >;
                };

            func_layer {
                label = "ADJ";
// -----------------------------------------------------------------------------------------
// |     |      | Mute | V_Up  | S_Up |     |        |      |      |       |       |
// | Back| Play | Frwd | V_Dn  | S_Dn |     |        | RCMD | RALT | RCTRL | RSHFT |
// | BT0 | BT1  | BT2  | BT3   | BT4  |     |  BTCLR |      |      |       |       |
//              | TAB  | SPC   | _NUM |	    | _DFL | RET  | BSPC |
                bindings = <
   &none          &none          &kp C_MUTE     &kp C_VOL_UP   &kp C_BRI_UP /**/  &none          &none          &none          &none          &none
   &kp C_PREV     &kp C_PP       &kp C_NEXT     &kp C_VOL_DN   &kp C_BRI_DN /**/  &none          &kp RCMD       &kp RALT       &kp RCTRL      &kp RSHIFT
   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4 /**/  &bt BT_CLR     &none          &none          &none          &none
                    	         &kp TAB        &kp SPACE      &to _NUM     /**/  &to _DFL       &kp RET        &kp BSPC
                        >;
                };
		
            osl_layer {
                 label = "OSL";
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %   |       |  &   | *    |  -   |   =   |  ;    |
// |  <  |  {  |  [  |  (  |  `   |       |  ESC | RCMD | RALT | RCTRL | RSHFT |
// |  >  |  }  |  ]  |  )  |  ~   |       |  +   |  '   |  "   |   ^   |   \   |
//             | TAB | SPC | _NUM |	  | _OSL | RET  | BSPC |
                 bindings = <
   &kp EXCL      &kp AT         &kp HASH        &kp DLLR       &kp PRCNT    /**/   &kp AMPS       &kp ASTRK      &kp MINUS      &kp EQUAL      &kp ESC
   &kp LT        &kp LBRC       &kp LBKT        &kp LPAR       &kp GRAVE    /**/   &kp ESC        &kp RCMD       &kp RALT       &kp RCTRL      &kp RSHIFT
   &kp GT        &kp RBRC       &kp RBKT        &kp RPAR       &kp TILDE    /**/   &kp PLUS       &kp SQT        &kp DQT        &kp CARET      &kp BSLH
                    	        &kp TAB         &kp SPACE      &to _OSL     /**/   &to _DFL       &kp RET        &kp BSPC
                        >;
                };

        };
};
